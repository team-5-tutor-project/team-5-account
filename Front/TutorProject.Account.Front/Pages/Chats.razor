@page "/chats"
@using TutorProject.Account.Front.Models
@inject NavigationManager NavigationManager
@inject HttpService _httpService
<PageTitle>Chats</PageTitle>

@if (!MainController.IsAuthorized)
{
    NavigationManager.NavigateTo("/Login");
}

<h1>Chats</h1>

@if (_chats == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Name</th>
                <th>Link</th>
            </tr>
        </thead>
        <tbody>
        @if (MainController.UserType == "Tutor")
        {
            @foreach (var chat in _chats)
            {
                <tr>
                    <td>@chat.ClientName</td>
                    <td>Link</td>
                </tr>
            }
        }
        @if (MainController.UserType == "Client")
                {
                    @foreach (var chat in _chats)
                    {
                        <tr>
                            <td>@chat.TutorName</td>
                            <a href="http://localhost:9000/chat/@chat.ChatId/@MainController.Token">link to chat</a>
                        </tr>
                    }
                }
        </tbody>
    </table>
}

@code {
    private List<Chat>? _chats;

    private async Task GetChats()
    {
        var result = await _httpService.GetAsync<List<Chat>>($"/api/chats?token={MainController.Token}");
        _chats = result.ResponseDto;
    }

    protected override async Task OnInitializedAsync()
    {
        if (!MainController.IsAuthorized)
            NavigationManager.NavigateTo("/Login");
        
        await GetChats();
    }
}